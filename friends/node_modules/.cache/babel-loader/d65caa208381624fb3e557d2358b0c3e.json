{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hui\\\\desktop\\\\lambda\\\\u3w3\\\\Auth-Friends\\\\friends\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from './redux/actions';\nimport './App.css';\nimport Form from './components/Form';\nimport Friends from './components/Friends';\n\nfunction App(props) {\n  const token = localStorage.getItem('token');\n\n  const handleLogout = ev => {\n    localStorage.removeItem('token');\n    props.logout();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.isLoggedIn ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Logout\")) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), token ? React.createElement(Redirect, {\n    to: \"/friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/friends\",\n    render: props => token ? React.createElement(Friends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = ({\n  login\n}) => {\n  return {\n    isLoggedIn: login.isLogged\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout\n})(App); // make a logout button that conditionally renders when token is valid","map":{"version":3,"sources":["C:/Users/Hui/desktop/lambda/u3w3/Auth-Friends/friends/src/App.js"],"names":["React","useState","Route","Redirect","connect","logout","Form","Friends","App","props","token","localStorage","getItem","handleLogout","ev","removeItem","isLoggedIn","mapStateToProps","login","isLogged"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAElB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAMC,YAAY,GAAGC,EAAE,IAAI;AACzBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAN,IAAAA,KAAK,CAACJ,MAAN;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGII,KAAK,CAACO,UAAN,GACA,0CACE;AAAQ,IAAA,OAAO,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADA,GAKE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,EAYIH,KAAK,GACL,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAEH,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdN,EAgBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEJ,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAkBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAEG,KAAK,IAEhCC,KAAK,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAEH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AA4BD;;AAED,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAErC,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACC;AADb,GAAP;AAGD,CALD;;AAOA,eAAef,OAAO,CAACa,eAAD,EAAkB;AACtCZ,EAAAA;AADsC,CAAlB,CAAP,CAEZG,GAFY,CAAf,C,CAIA","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { logout } from './redux/actions'\n\nimport './App.css';\n\nimport Form from './components/Form'\nimport Friends from './components/Friends'\n\nfunction App(props) {\n\n  const token = localStorage.getItem('token')\n\n  const handleLogout = ev => {\n    localStorage.removeItem('token')\n    props.logout()\n  }\n\n  return (\n    <div className=\"App\">\n\n      {\n        props.isLoggedIn ?\n        <>\n          <button onClick={handleLogout}>Logout</button>\n          \n        </>\n        : <Redirect to=\"/login\" />\n      }\n\n      {\n        token ?\n        <Redirect to=\"/friends\" />\n        : <Redirect to=\"/login\" />\n      }\n      <Route path=\"/login\" component={Form} />\n\n      <Route path=\"/friends\" render={props => (\n        \n          token ?\n          <Friends />\n          : <Redirect to=\"/login\" />\n        \n      )} />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ login }) => {\n\n  return {\n    isLoggedIn: login.isLogged\n  }\n}\n\nexport default connect(mapStateToProps, {\n  logout\n})(App);\n\n// make a logout button that conditionally renders when token is valid"]},"metadata":{},"sourceType":"module"}