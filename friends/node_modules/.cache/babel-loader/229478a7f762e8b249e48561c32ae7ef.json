{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Hui\\\\Desktop\\\\lambda\\\\u3w3\\\\Auth-Friends\\\\friends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Hui\\\\Desktop\\\\lambda\\\\u3w3\\\\Auth-Friends\\\\friends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hui\\\\desktop\\\\lambda\\\\u3w3\\\\Auth-Friends\\\\friends\\\\src\\\\components\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios'; //Redux\n\nimport { connect } from 'react-redux';\nimport { setLogged, setLogging, sendError } from '../redux/actions';\n\nfunction Form(props) {\n  console.log(props.friends);\n  console.log(props.setLogging);\n  const history = useHistory();\n\n  const _useState = useState({\n    username: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        credentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const handleInput = ev => {\n    setCredentials(_objectSpread({}, credentials, {\n      [ev.target.name]: ev.target.value\n    }));\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    props.setLogging();\n  };\n\n  const isLogging = props.isLogging,\n        setLogged = props.setLogged,\n        sendError = props.sendError;\n  useEffect(() => {\n    Axios.post('http://localhost:5000/login', credentials).then(res => {\n      console.log(res);\n      localStorage.setItem('token', res.data.token);\n      props.setLogged();\n    }).catch(err => {\n      console.log(err);\n      props.sendError(err);\n    });\n  }, [props.isLogging]); // useEffect(() => {\n  //   if(props.isLogged) {\n  //     // history.push('/friends')\n  //   }\n  // }, [props.isLogged])\n\n  return React.createElement(\"div\", {\n    className: \"form__cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    name: \"username\",\n    onChange: handleInput,\n    value: credentials.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    onChange: handleInput,\n    value: credentials.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nconst mapStateToProps = ({\n  friends\n}) => {\n  return {\n    friends: friends,\n    isLogging: friends.isLogging,\n    isLogged: friends.isLogged\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLogged,\n  sendError,\n  setLogging\n})(Form);","map":{"version":3,"sources":["C:/Users/Hui/desktop/lambda/u3w3/Auth-Friends/friends/src/components/Form.js"],"names":["React","useState","useEffect","useHistory","Axios","connect","setLogged","setLogging","sendError","Form","props","console","log","friends","history","username","password","credentials","setCredentials","handleInput","ev","target","name","value","handleSubmit","preventDefault","isLogging","post","then","res","localStorage","setItem","data","token","catch","err","mapStateToProps","isLogged"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios'\r\n\r\n//Redux\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  setLogged,\r\n  setLogging,\r\n  sendError\r\n} from '../redux/actions'\r\n\r\nfunction Form(props) {\r\n\r\n  console.log(props.friends)\r\n  console.log(props.setLogging)\r\n\r\n  const history = useHistory()\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  })\r\n\r\n  const handleInput = ev => {\r\n    setCredentials({ ...credentials, [ev.target.name]: ev.target.value })\r\n  }\r\n  const handleSubmit = ev => {\r\n    ev.preventDefault()\r\n    props.setLogging()\r\n  }\r\n\r\n  const { isLogging, setLogged, sendError } = props\r\n  useEffect(() => {\r\n\r\n      Axios.post('http://localhost:5000/login', credentials)\r\n        .then( res => {\r\n          console.log(res)\r\n          localStorage.setItem('token', res.data.token)\r\n          props.setLogged()\r\n        })\r\n        .catch( err => {\r\n          console.log(err)\r\n          props.sendError(err)\r\n        })\r\n\r\n  }, [props.isLogging])\r\n\r\n  // useEffect(() => {\r\n  //   if(props.isLogged) {\r\n  //     // history.push('/friends')\r\n  //   }\r\n  // }, [props.isLogged])\r\n\r\n  return (\r\n    <div className=\"form__cont\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"username\" \r\n          name=\"username\"\r\n          onChange={handleInput}\r\n          value={credentials.username}\r\n        />\r\n        <input \r\n          type=\"password\"\r\n          placeholder=\"password\" \r\n          name=\"password\"\r\n          onChange={handleInput}\r\n          value={credentials.password}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ friends }) => {\r\n  return {\r\n    friends: friends,\r\n    isLogging: friends.isLogging,\r\n    isLogged: friends.isLogged\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLogged,\r\n  sendError,\r\n  setLogging\r\n})(Form)"]},"metadata":{},"sourceType":"module"}