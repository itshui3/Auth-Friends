{"ast":null,"code":"export const LOGGING_IN = 'LOGGING_IN';\nexport const LOGGED_IN = 'LOGGED_IN';\nexport const ERROR_LOGGING_IN = 'ERROR_LOGGING_IN';\nexport const setLogging = () => {\n  return {\n    type: LOGGING_IN\n  };\n};\nexport const login = credentials => dispatch => {\n  dispatch({\n    type: LOGGING_IN\n  });\n  Axios.post('http://localhost:5000/api/login', credentials).then(res => {\n    console.log(res);\n    localStorage.setItem('token', res.data.payload);\n    dispatch({\n      type: LOGGED_IN\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: ERROR_LOGGING_IN,\n      payload: err\n    });\n  });\n};\nexport const setLogged = () => {\n  return {\n    type: LOGGED_IN\n  };\n};\nexport const sendError = errMessage => {\n  return {\n    type: ERROR_LOGGING_IN,\n    payload: errMessage\n  };\n};","map":{"version":3,"sources":["C:/Users/Hui/desktop/lambda/u3w3/Auth-Friends/friends/src/redux/actions/loginActions.js"],"names":["LOGGING_IN","LOGGED_IN","ERROR_LOGGING_IN","setLogging","type","login","credentials","dispatch","Axios","post","then","res","console","log","localStorage","setItem","data","payload","catch","err","setLogged","sendError","errMessage"],"mappings":"AAEA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMK,KAAK,GAAIC,WAAD,IAAiBC,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACAQ,EAAAA,KAAK,CAACC,IAAN,CAAW,iCAAX,EAA8CH,WAA9C,EACGI,IADH,CACSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,GAAG,CAACK,IAAJ,CAASC,OAAvC;AACAV,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AACD,GALH,EAMGiB,KANH,CAMUC,GAAG,IAAI;AACbP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAZ,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEF,gBAAR;AAA0Be,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACD,GATH;AAUD,CAZM;AAcP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLhB,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMoB,SAAS,GAAIC,UAAD,IAAgB;AACvC,SAAO;AACLlB,IAAAA,IAAI,EAAEF,gBADD;AAELe,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALM","sourcesContent":["\r\n\r\nexport const LOGGING_IN = 'LOGGING_IN'\r\nexport const LOGGED_IN = 'LOGGED_IN'\r\nexport const ERROR_LOGGING_IN = 'ERROR_LOGGING_IN'\r\n\r\nexport const setLogging = () => {\r\n  return {\r\n    type: LOGGING_IN\r\n  }\r\n}\r\n\r\nexport const login = (credentials) => dispatch => {\r\n  dispatch({ type: LOGGING_IN })\r\n  Axios.post('http://localhost:5000/api/login', credentials)\r\n    .then( res => {\r\n      console.log(res)\r\n      localStorage.setItem('token', res.data.payload)\r\n      dispatch({ type: LOGGED_IN })\r\n    })\r\n    .catch( err => {\r\n      console.log(err)\r\n      dispatch({ type: ERROR_LOGGING_IN, payload: err })\r\n    })\r\n}\r\n\r\nexport const setLogged = () => {\r\n  return {\r\n    type: LOGGED_IN\r\n  }\r\n}\r\n\r\nexport const sendError = (errMessage) => {\r\n  return {\r\n    type: ERROR_LOGGING_IN,\r\n    payload: errMessage\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}