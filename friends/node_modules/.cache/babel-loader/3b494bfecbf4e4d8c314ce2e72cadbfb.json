{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hui\\\\desktop\\\\lambda\\\\u3w3\\\\Auth-Friends\\\\friends\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Form from './components/Form';\nimport Friends from './components/Friends';\n\nfunction App() {\n  const token = localStorage.getItem('token');\n\n  const handleLogout = ev => {\n    localStorage.removeItem('token');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, token ? React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Logout\") : null, token ? React.createElement(Redirect, {\n    to: \"/friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/friends\",\n    render: props => token ? React.createElement(Friends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nexport default App; // make a logout button that conditionally renders when token is valid","map":{"version":3,"sources":["C:/Users/Hui/desktop/lambda/u3w3/Auth-Friends/friends/src/App.js"],"names":["React","Route","Redirect","Form","Friends","App","token","localStorage","getItem","handleLogout","ev","removeItem","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAMC,YAAY,GAAGC,EAAE,IAAI;AACzBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIL,KAAK,GACL;AAAQ,IAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,GAEH,IALN,EAQIH,KAAK,GACL,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAEH,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,EAYE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEH,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAES,KAAK,IAEhCN,KAAK,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAEH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAwBD;;AAED,eAAeD,GAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\nimport './App.css';\n\nimport Form from './components/Form'\nimport Friends from './components/Friends'\n\nfunction App() {\n  const token = localStorage.getItem('token')\n\n  const handleLogout = ev => {\n    localStorage.removeItem('token')\n  }\n\n  return (\n    <div className=\"App\">\n\n      {\n        token ?\n        <button onClick={handleLogout}>Logout</button>\n        : null\n      }\n      {\n        token ?\n        <Redirect to=\"/friends\" />\n        : <Redirect to=\"/login\" />\n      }\n      <Route path=\"/login\" component={Form} />\n\n      <Route path=\"/friends\" render={props => (\n        \n          token ?\n          <Friends />\n          : <Redirect to=\"/login\" />\n        \n      )} />\n    </div>\n  );\n}\n\nexport default App;\n\n// make a logout button that conditionally renders when token is valid"]},"metadata":{},"sourceType":"module"}